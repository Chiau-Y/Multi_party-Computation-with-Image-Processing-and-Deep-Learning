from __future__ import print_function
import os
import io
import time
from googleapiclient.discovery import build
from googleapiclient.http import MediaFileUpload, MediaIoBaseDownload
from httplib2 import Http
from oauth2client import file, client, tools

import cv2
import time
import math
import random
import numpy as np
from random import sample
import matplotlib.pyplot as plt


start_time = time.time()
        
#------------------------------------ Distribution ----------------------------------# 
def Distribution(img):
        
    img_party1_result = np.zeros([img_size[0] , img_size[1] ])    # party 7, let the secret be more secure
    img_party2_result = np.zeros([img_size[0] , img_size[1] ])    # party 8
    img_party3_result = np.zeros([img_size[0] , img_size[1] ])    # party 9
    img_party4_result = np.zeros([img_size[0] , img_size[1] ])    # party 9
    img_party5_result = np.zeros([img_size[0], img_size[1] ])    # party 9
    img_party6_result = np.zeros([img_size[0], img_size[1]])    # party 9
    
    
    for i in range (img_size[0]):       
        for j in range(img_size[1]):      
            random_num = random.randint(0,100)
            img_party1_result[i][j] = (img[i][j] + random_num * 1)*16 % 33292801
            img_party2_result[i][j] = (img[i][j] + random_num * 2)*16 % 33292801
            img_party3_result[i][j] = (img[i][j] + random_num * 3)*16 % 33292801     
            img_party4_result[i][j] = (img[i][j] + random_num * 4)*16 % 33292801
            img_party5_result[i][j] = (img[i][j] + random_num * 5)*16 % 33292801
            img_party6_result[i][j] = (img[i][j] + random_num * 6)*16 % 33292801  
            
                        
    return img_party1_result, img_party2_result, img_party3_result, img_party4_result, img_party5_result, img_party6_result
 
 
    
#------------------------------------  Main ----------------------------------#
if __name__ == '__main__':
    print("----------- Local -----------")
    img_original = cv2.imread('D:/Master_2019_2021/Muti_Party_Computation/ErrorCorrection/parties/Error_test.bmp',0)  # GRAY    
    img_size = np.shape (img_original)
    
    
    plt.figure(0)
    plt.imshow(img_original, cmap='Greys_r') # 顯示圖片
    plt.axis('off') # 不顯示座標軸  
 
    
    print("Distributon")
    party1, party2, party3, party4, party5, party6 = Distribution(img_original) 
 

    plt.figure(1)
    plt.imshow(party1, cmap='Greys_r')
    plt.axis('off') # 不顯示座標軸 
    plt.figure(2)
    plt.imshow(party2, cmap='Greys_r')
    plt.axis('off') # 不顯示座標軸
    plt.figure(3)
    plt.imshow(party3, cmap='Greys_r')
    plt.axis('off') # 不顯示座標軸  
    plt.figure(4)
    plt.imshow(party4, cmap='Greys_r')
    plt.axis('off') # 不顯示座標軸 
    plt.figure(5)
    plt.imshow(party5, cmap='Greys_r')
    plt.axis('off') # 不顯示座標軸
    plt.figure(6)
    plt.imshow(party6, cmap='Greys_r')
    plt.axis('off') # 不顯示座標軸   
    
    np.save('Party1', party1)
    np.save('Party2', party2)
    np.save('Party3', party3)
    np.save('Party4', party4)
    np.save('Party5', party5)
    np.save('Party6', party6)            


from sympy import *
import numpy as np

a = Symbol('a')
b = Symbol('b')
c = Symbol('c')
d = Symbol('d')
e = Symbol('e')

error = np.poly1d([1,4,2])
h = np.poly1d([6,2,3,6,4])

answer= []
variable = [a,b,c,d,e]
unknown = np.poly1d([a,b,c])
coefficient = [a,b,c]

for i in range (3):
    unknown = np.poly1d(coefficient)
    h_Prime = unknown*error
    ans = solve(h_Prime[len(h_Prime)-i]-h[len(h)-i],variable[i])
    answer.append(ans[0]%7)
    coefficient[i] = answer[i]

print(np.poly1d(answer))
# -----------------------------------------------------------------#

# a = Symbol('a')
# b = Symbol('b')
# c = Symbol('c')
# d = Symbol('d')
# e = Symbol('e')

# error = np.poly1d([1,4,2])
# h = np.poly1d([6,2,3,6,4])

# answer= []
# variable = [a,b,c,d,e]
# coefficient = [a,b,c]
# unknown = np.poly1d(coefficient)

# h_Prime = unknown*error
# ans = solve(h_Prime[len(h_Prime)]-h[len(h)],variable[0])
# answer.append(ans[0]%7)
# coefficient[0] = answer[0]

# unknown = np.poly1d(coefficient)
# h_Prime = unknown*error
# ans = solve(h_Prime[len(h_Prime)-1]-h[len(h)-1],variable[1])
# answer.append(ans[0]%7)
# coefficient[1] = answer[1]

# unknown = np.poly1d(coefficient)
# h_Prime = unknown*error
# ans = solve(h_Prime[len(h_Prime)-2]-h[len(h)-2],variable[2])
# answer.append(ans[0]%7)

# print(np.poly1d(answer))
